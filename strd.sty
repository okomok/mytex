\ProvidesPackage{strd}

\usepackage{tikz,lambda,mathtools,graphicx}
\usetikzlibrary{shapes,calc,backgrounds,calc}


\newcommand*{\strduse}{\Identity}


% Styles
%

\tikzset{strd normaltextvaligned/.style={text height=1.9ex,text depth=0.65ex}}
\tikzset{strd scripttextvaligned/.style={text height=1.5ex,text depth=0.4ex}}
\tikzset{strd coord/.style={coordinate}}
\tikzset{strd mathnodes/.style={execute at begin node=$,execute at end node=$}}
\tikzset{strd none/.style={opacity=0,text opacity=0,fill opacity=0}}
\tikzset{strd picturevaligned/.style={baseline={([yshift=-0.5ex]current bounding box.center)}}}
\tikzset{strd picture/.style={strd picturevaligned,strd mathnodes,very thin,rounded corners=2pt}}
\tikzset{strd draw/.style={}}


% Layers
%

\pgfdeclarelayer{strd gradedlayer}
\pgfdeclarelayer{strd pavelayer}
\pgfdeclarelayer{strd whitelayer}
\pgfdeclarelayer{strd celllayer}
\pgfdeclarelayer{strd labellayer}
\pgfdeclarelayer{strd framelayer}
\pgfdeclarelayer{strd aroundframelayer}
\pgfsetlayers{background,main,strd pavelayer,strd aroundframelayer,strd framelayer,strd gradedlayer,strd whitelayer,strd celllayer,strd labellayer}

% layers forget surrounding line styles, so we define...
\newcommand*{\strdresetlinewidth}{\pgfsetlinewidth{0.2pt}}

\newcommand*{\strdonlayer}[2]{%
    \begin{pgfonlayer}{#1}
        \strdresetlinewidth
        #2
    \end{pgfonlayer}
    \strdresetlinewidth%
}


% Environmentals 
%

\newcommand*{\strd}[1]{%
    \begin{tikzpicture}[strd picture]
        \strddeclorigin
        #1;
    \end{tikzpicture}%
}

\newcommand*{\strdin}[2]{%
    \Foldr{\strdinimpl}{#2}{\myListize{#1}}%
}
\newcommand*{\strdinimpl}[2]{%
    \begin{#1}
%        \! % why needed?
        \strd{#2}
    \end{#1}%
}


% String constructors
%   A string 's' is a triple of nodes 's Start', 's' and 's End'.
%

\newcommand*{\strdrange}[4]{% {s}{m}{e}{to}
    \node[strd coord] (#4 Start) at (#1) {};
    \node[strd coord] (#4) at (#2) {};
    \node[strd coord] (#4 End) at (#3) {};%
}

\newcommand*{\strdcoord}[2]{% {node}{to}
    \node[strd coord] (#2 Start) at (#1) {};
    \node[strd coord] (#2) at (#1) {};
    \node[strd coord] (#2 End) at (#1) {};%
}

\tikzset{strd origin/.style={inner sep=0pt,outer sep=0pt,minimum width=9pt,minimum height=0pt}}

\newcommand*{\strddeclorigin}{%
    \strdcoord{0,0}{strdorigin}
    \node[strd origin] at (strdorigin) {};%
}
\newcommand*{\strdorigin}{strdorigin}


% Strings
%

\newcommand*{\strdxunit}{0.5}
\newcommand*{\strdyunit}{0.8}
\newcommand*{\strdxhalfunit}{0.25}
\newcommand*{\strdyhalfunit}{0.4}
\newcommand*{\strdunitdiff}{0.3}
\newcommand*{\strdunitmergin}{0.1}

\newcommand*{\strdempty}[2]{%
    \node[strd coord] (#2) at (#1 End) {};
    \node[strd coord] (#2 Start) at (#2) {};
    \node[strd coord] (#2 End) at (#2) {};%
}

\newcommand*{\strdcopy}[2]{%
    \node[strd coord] (#2) at (#1) {};
    \node[strd coord] (#2 Start) at (#1 Start) {};
    \node[strd coord] (#2 End) at (#1 End) {};%
}

\newcommand*{\strdleft}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2 Corner) at ($(#1 End)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#2) at ($(#1 End)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#2 End) at ($(#1 End)+(-\strdxunit,-\strdyunit)$) {};
    \draw[strd draw]{
        (#2 Start) parabola (#2 Corner) -- (#2 End)
    };%
}
\newcommand*{\strdright}{\strdflip\strdleft}

\newcommand*{\strdmid}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2) at ($(#1 End)+(0,-\strdyhalfunit)$) {};
    \node[strd coord] (#2 End) at ($(#1 End)+(0,-\strdyunit)$) {};
    \draw[strd draw]{
        (#2 Start) -- (#2 End)
    };%
}

\newcommand*{\strdunleft}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2) at ($(#1 End)+(0,-\strdyhalfunit)$) {};
    \node[strd coord] (#2 Corner) at ($(#1 End)+(0,-\strdxunit)$) {};
    \node[strd coord] (#2 End) at ($(#1 End)+(\strdxunit,-\strdyunit)$) {};
    \draw[strd draw]{
        (#2 Start) -- (#2 Corner) parabola[bend at end] (#2 End)
    };%
}
\newcommand*{\strdunright}{\strdflip\strdunleft}

\newcommand*{\strdconnect}[3]{%
    \node[strd coord] (#3 Start) at (#1 Start) {};
    \node[strd coord] (#3) at (#2 Start) {};
    \node[strd coord] (#3 End) at (#2 End) {};%
}

\newcommand*{\strdhleft}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2) at ($(#1 End)+(-\strdxhalfunit,0)$) {};
    \node[strd coord] (#2 End) at ($(#1 End)+(-\strdxunit,0)$) {};
    \draw[strd draw]{
        (#2 Start) -- (#2 End)
    };%
}
\newcommand*{\strdhright}{\strdflip\strdhleft}

\newcommand*{\strdminus}[2]{%
    \strdscopexscale{0.5}{
        \strdhleft{#1}{#2 Left}
        \strdempty{#1}{#2}
        \strdhright{#1}{#2 Right}
    }
}

\newcommand*{\strdsubset}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2 StartCorner) at ($(#1 End)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#2) at ($(#1 End)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#2 EndCorner) at ($(#1 End)+(-\strdxunit,-\strdxunit)$) {};
    \node[strd coord] (#2 End) at ($(#1 End)+(0,-\strdyunit)$) {};
    \draw[strd draw]{
        (#2 Start) parabola (#2 StartCorner) -- (#2 EndCorner) parabola[bend at end] (#2 End)
    };%
}
\newcommand*{\strdsupset}{\strdflip\strdsubset}

\newcommand*{\strdlint}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2 StartCorner) at ($(#1 End)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#2) at ($(#1 End)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#2 EndCorner) at ($(#1 End)+(-\strdxunit,-\strdxunit)$) {};
    \node[strd coord] (#2 End) at ($(#1 End)+(-1,-\strdyunit)$) {};
    \draw[strd draw]{
        (#2 Start) parabola (#2 StartCorner) -- (#2 EndCorner) parabola[bend at end] (#2 End)
    };%
}
\newcommand*{\strdrint}{\strdflip\strdlint}

\newcommand*{\strdlchange}[2]{%
    \node[strd coord] (#2 Start) at (#1 End) {};
    \node[strd coord] (#2 StartCorner) at ($(#1 End)+(0,-\strdunitmergin)$) {};
    \node[strd coord] (#2) at ($(#1 End)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#2 EndCorner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#2 End) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \draw[strd draw]{
        (#2 Start) -- (#2 StartCorner) parabola[bend at end] (#2) parabola (#2 EndCorner) -- (#2 End)
    };%
}
\newcommand*{\strdrchange}{\strdflip\strdlchange}

\newcommand*{\strdjump}{\strdnone\strdmid}
\newcommand*{\strdljump}{\strdnone\strdhleft}
\newcommand*{\strdrjump}{\strdnone\strdhright}
\newcommand*{\strddup}{\strdnone\strdminus}

\newcommand*{\strdjumpto}[3]{% {node}{from}{to}
    \node[strd coord] (#3 Start) at (#2 End) {};
    \node[strd coord] (#3 End) at (#1) {};
    \node[strd coord] (#3) at ($(#3 Start)!.5!(#3 End)$) {};%
}

% Square strings
%   Note \getlastxy doesn't work with calc.

\newcommand*{\strdsqsubsetto}[3]{% {node}{from}{to}
    \node[strd coord] (#3 Start) at (#2 End) {};
    \node[strd coord] (#3 End) at (#1) {};
    \node[strd coord] (#3 StartCorner) at ($(#3 Start)+(-\strdxunit,0)$) {};
    \node[strd coord] (#3 EndCorner) at ({#3 StartCorner} |- {#3 End}) {};
    \node[strd coord] (#3) at ($(#3 StartCorner)!.5!(#3 EndCorner)$) {};
    \draw[strd draw]{
        (#3 Start) -- (#3 StartCorner) -- (#3 EndCorner) -- (#3 End)
    };%
}
\newcommand*{\strdsqsupsetto}{\Compose\strdflip\strdsqsubsetto}

\newcommand*{\strdsqsubset}[2]{%
    \strdjump{#1}{#2 Impl}
    \strdsqsubsetto{#2 Impl End}{#1}{#2}%
}
\newcommand*{\strdsqsupset}{\strdflip\strdsqsubset}

\newcommand*{\strdsquare}[2]{%
    \strdsqsubset{#1}{#2 Left}
    \strdsqsupset{#1}{#2 Right}
    \strdjump{#1}{#2}%
}


% Dots

\tikzset{strd dot/.style={circle,draw=black,fill=black,minimum size=1.5pt,inner sep=0pt}}
\tikzset{strd whitedot/.style={circle,draw=white,fill=white,minimum size=3pt,inner sep=0pt}}

\newcommand*{\strdputdot}[1]{%
    \strdonlayer{strd celllayer}{
        \node[strd dot] at (#1) {};
    }%
}

\newcommand*{\strdputwhitedot}[1]{%
    \node[strd whitedot] at (#1) {};%
}


% Cells
%

\tikzset{strd cellbase/.style={font=\normalsize,solid,draw,fill=white,rectangle,minimum size=9pt,inner xsep=0.6pt,inner ysep=1.2pt}}
\tikzset{strd cell/.style={strd cellbase,very thin}}
\tikzset{strd mapcell/.style={strd cellbase,thin}}
\tikzset{strd bijcell/.style={strd cellbase,thin,sharp corners}}

\newcommand*{\strdputcellof}[3]{% {style}{x}{node}
    \strdonlayer{strd celllayer}{
        \node[#1] at (#3) {#2};
    }% 
}
\newcommand*{\strdputcell}{\strdputcellof{strd cell}}
\newcommand*{\strdputmapcell}{\strdputcellof{strd mapcell}}
\newcommand*{\strdputbijcell}{\strdputcellof{strd bijcell}}


% Frames
%

\tikzset{strd mapframe/.style={solid,thin,rounded corners=2pt}}
\tikzset{strd bijframe/.style={solid,thin,sharp corners}}

\newcommand*{\strdframeofone}[6]{% {style}{xl}{xr}{sf}{from}{to}
    \strduse{#4}{#5}{#6 Unframe}
    \strdonlayer{strd framelayer}{
        \strdscopepathis{#1}{
            \strdxscale{#2}{\strdsqsubsetto{#6 Unframe End}}{#5}{#6 Left}
            \strdxscale{#3}{\strdsqsupsetto{#6 Unframe End}}{#5}{#6 Right}
            \strdjumpto{#6 Unframe End}{#5}{#6}
        }
    }%
}
\newcommand*{\strdframeof}[3]{\strdseqin{\strdframeofone{#1}{#2}{#3}}}

\newcommand*{\strdmapframe}{\strdframeof{strd mapframe}}
\newcommand*{\strdbijframe}{\strdframeof{strd bijframe}}


% aroundframe dots

\tikzset{strd aroundframe/.style={circle,draw=white,fill=white,minimum size=3pt,inner sep=0pt}}
\tikzset{strd roadaroundframe/.style={rectangle,sharp corners,draw=white,fill=white,minimum width=4pt,minimum height=3pt,inner sep=0pt}}

\newcommand*{\strdputaroundframe}[1]{%
    \strdonlayer{strd aroundframelayer}{
        \node[strd aroundframe] at (#1) {};
    }% 
}

\newcommand*{\strdputroadaroundframe}[1]{%
    \strdonlayer{strd aroundframelayer}{
        \node[strd roadaroundframe] at (#1) {};
    }% 
}


% Labels
%

\tikzset{strd sidelabel/.style={font=\scriptsize,inner sep=0.2pt,strd scripttextvaligned}}
\tikzset{strd familylabel/.style={font=\scriptsize,inner xsep=0.2pt,inner ysep=-0.4pt,strd scripttextvaligned}}
\tikzset{strd framelabel/.style={font=\scriptsize,fill=white,inner sep=0.4pt,inner ysep=0.8pt}}
\tikzset{strd edgelabel/.style={font=\normalsize,inner sep=1.2pt}}%,strd normaltextvaligned}}

\newcommand*{\strdputllabel}[2]{%
    \strdonlayer{strd labellayer}{
        \node[strd sidelabel,left] at (#2) {#1};
    }%
}

\newcommand*{\strdputrlabel}[2]{%
    \strdonlayer{strd labellayer}{
        \node[strd sidelabel,right] at (#2) {#1};
    }%
}

\newcommand*{\strdputframelabel}[2]{%
    \strdonlayer{strd labellayer}{
        \node[strd framelabel] at (#2) {#1};
    }%
}

\newcommand*{\strdputfamilylabel}[2]{% {i}{sq}
    \strdonlayer{strd labellayer}{
        \node[strd familylabel,above right] at (#2 Right EndCorner) {#1};
    }%
}
\newcommand*{\strdputunfamilylabel}[2]{% {i}{sq}
    \strdonlayer{strd labellayer}{
        \node[strd familylabel,above left] at (#2 Right EndCorner) {#1};
    }%
}

\newcommand*{\strdputregionlabel}[2]{%
    \strdonlayer{strd labellayer}{
        \node[strd familylabel,below left] at (#2 Right StartCorner) {#1};
    }%
}

\newcommand*{\strdputedgelabelat}[3]{% {at}{l}{node}
    \strdonlayer{strd labellayer}{
        \node[strd edgelabel,#1] at (#3) {#2};
    }%
}

\newcommand*{\strdputstartlabel}[2]{\strdputedgelabelat{above}{#1}{#2 Start}}
\newcommand*{\strdputendlabel}[2]{\strdputedgelabelat{below}{#1}{#2 End}}


% Composed strings
%

\newcommand*{\strdcap}[2]{%
    \strdleft{#1}{#2 Left}
    \strdright{#1}{#2 Right}
    \strdjump{#1}{#2}%
}

\newcommand*{\strdcup}[2]{%
    \strdxscale{2}{\strddup}{#1}{#2 Dup}
    \strdunleft{#2 Dup Left}{#2 Left}
    \strdunright{#2 Dup Right}{#2 Right}
    \strdjump{#1}{#2}%
}

% rename me
\newcommand*{\strdparallel}[2]{%
    \strddup{#1}{#2 Dup}
    \strdmid{#2 Dup Left}{#2 Left}
    \strdmid{#2 Dup Right}{#2 Right}
    \strdjump{#1}{#2}%
}

\newcommand*{\strdcircle}[2]{%
    \strdsubset{#1}{#2 Left}
    \strdsupset{#1}{#2 Right}
    \strdjump{#1}{#2}%
}


% White strings
%

\tikzset{strd edgenoise/.style={shorten >= -0.2pt,shorten <= -0.2pt}}
\tikzset{strd white/.style={draw=white,line width=3pt,strd edgenoise}}

\newcommand*{\strdwhite}[3]{%
    \strdonlayer{strd whitelayer}{
        \strdscope{strd white}{\strduse{#1}{#2}{#3}}
    }%
}


% Graded strings; order depends
%   You must wrap each string because of layers-reset-line-width bug.
%   BTW, tikz/double doesn't work with scopes.

\newcommand*{\strdgraded}[3]{%
    \strdonlayer{strd gradedlayer}{
        \strdscope{strd white}{\strduse{#1}{#2}{#3 Graded}}
        \strdscope{strd edgenoise}{\strduse{#1}{#2}{#3}}
    }%
}

\newcommand*{\strdroadgraded}[3]{%
    \strdscope{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdonlayer{strd gradedlayer}{
        \strdscope{strd roadpave}{\strduse{#1}{#2}{#3 Paved}}
    }%
}


% Roads
%   Keep scaling away by '--'.
%

\tikzset{strd roadcolor/.style={gray!18}}
\tikzset{strd roadbase/.style={line width=3.05pt}}
\tikzset{strd roadpave/.style={line width=2.65pt,strd edgenoise,strd roadcolor}}

\newcommand*{\strdroad}[3]{%
    \strdscope{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdonlayer{strd pavelayer}{
        \strdscope{strd roadpave}{\strduse{#1}{#2}{#3 Paved}}
    }%
}

\newcommand*{\strdroadx}[3]{% crossable road; order depends
    \strdscope{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdscope{strd roadpave}{\strduse{#1}{#2}{#3 Paved}}%
}

\newcommand*{\strdputdeadend}[1]{% slightly noisy around anti-aliasing
    \strdonlayer{strd whitelayer}{
        \draw[strd draw,white,line width=4pt,shorten >=-1pt] {
            ($(#1 End)+(0,10.16pt)$) -- (#1 End)
        };
        \draw[strd draw,strd roadbase]{
            ($(#1 End)+(0,10.16pt)$) -- ($(#1 End)+(0,10.36pt)$)
        };
    }%
}

\newcommand*{\strdputroadlabel}[3]{%
    \strdonlayer{strd labellayer}{
        \node[strd sidelabel,left,xshift=-1.5pt] at (#3) {#1};
        \node[strd sidelabel,right,xshift=1.5pt] at (#3) {#2};
    }%
}

\newcommand*{\strdroadlaside}[2]{%
    \node[strd coord] (#2 Start) at ($(#1 End)+(-0.05,0)$) {};
    \node[strd coord] (#2) at (#2 Start) {};
    \node[strd coord] (#2 End) at (#2 Start) {};%
}
\newcommand*{\strdroadraside}{\strdflip\strdroadlaside}


% Transformations
%

\newcommand*{\strdscope}[2]{%
    \begin{scope}[#1]
        #2
    \end{scope}%
}

\newcommand*{\strdscopeflip}{\strdscope{xscale=-1}}
\newcommand*{\strdscopeinv}{\strdscope{yscale=-1}}
\newcommand*{\strdscopexscale}[1]{\strdscope{xscale=#1}}
\newcommand*{\strdscopeyscale}[1]{\strdscope{yscale=#1}}
\newcommand*{\strdscopescale}[2]{\strdscope{xscale=#1,yscale=#2}}
\newcommand*{\strdscopenone}{\strdscope{every path/.style=strd none,every node/.style=strd none}}
\newcommand*{\strdscopenolabels}{\strdscope{every node/.style=strd none}}
\newcommand*{\strdscopepathis}[1]{\strdscope{every path/.style=#1}}
\newcommand*{\strdscopenodeis}[1]{\strdscope{every node/.append style=#1}}
\newcommand*{\strdscopeimplicit}{\strdscopepathis{densely dotted}}


% Command combinators
%

\newcommand*{\strdtofun}[4]{%
    \strduse{#1}{\strduse{#2}{#3}{#4}}%
}

\newcommand*{\strdflip}{\strdtofun\strdscopeflip}
\newcommand*{\strdinv}{\strdtofun\strdscopeinv}
\newcommand*{\strdnone}{\strdtofun\strdscopenone}
\newcommand*{\strdscale}[2]{\strdtofun{\strdscopescale{#1}{#2}}}
\newcommand*{\strdxscale}{\Compose\strdtofun\strdscopexscale}
\newcommand*{\strdyscale}{\Compose\strdtofun\strdscopeyscale}
\newcommand*{\strdxhalf}{\strdxscale{0.5}}
\newcommand*{\strdyhalf}{\strdyscale{0.5}}
\newcommand*{\strdxdouble}{\strdxscale{2}}
\newcommand*{\strdydouble}{\strdyscale{2}}
\newcommand*{\strdimplicit}{\strdtofun\strdscopeimplicit}

\newcommand*{\strdthen}[4]{%
    \strduse{#1}{#3}{#4 Prev}
    \strduse{#2}{#4 Prev}{#4}%
}

\newcommand*{\strdseq}[1]{% can't support empty lists.
    \Foldl{\strdthen}{\strdcopy}{\myListize{#1}}%
}
\newcommand*{\strdseqin}[2]{\strduse{#1}{\strdseq{#2}}}
\newcommand*{\strdgathered}[1]{\strdin{gathered}{\strdseq{#1}{\strdorigin}{strdend}}}

\newcommand*{\strdassign}[4]{% {name}{sf}{from}{to}
    \strduse{#2}{#3}{#4}
    \strdnone{\strduse{#2}}{#3}{#1}% strdcopy keeps ranges only.
}

\newcommand*{\strdwith}[4]{% {h}{sf}{from}{to}
    \strduse{#2}{#3}{#4}
    \strduse{#1}{#4}%
}
\newcommand*{\strdwithat}[5]{% {at}{h}{sf}{from}{to}
    \strduse{#3}{#4}{#5}
    \strduse{#2}{#5 #1}%
}
\newcommand*{\strdhere}[1]{\strdwith{#1}{\strdempty}}

\newcommand*{\strdapply}[3]{% {h}{from}{to}
    \strdcopy{#2}{#3}
    \strduse{#1}{#2}%
}
\newcommand*{\strdapplyat}[4]{% {at}{h}{from}{to}
    \strdcopy{#3}{#4}
    \strduse{#2}{#3 #1}%
}
\newcommand*{\strdlambda}{\Compose\strdapply\mylambda}

\newcommand*{\strddot}{\strdhere\strdputdot}
\newcommand*{\strdwhitedot}{\strdwithat{Start}{\strdputwhitedot}}
\newcommand*{\strdcell}{\Compose\strdhere\strdputcell}
\newcommand*{\strdmapcell}{\Compose\strdhere\strdputmapcell}
\newcommand*{\strdbijcell}{\Compose\strdhere\strdputbijcell}
\newcommand*{\strdaroundframe}{\strdhere\strdputaroundframe}
\newcommand*{\strdroadaroundframe}{\strdhere\strdputroadaroundframe}
\newcommand*{\strddeadend}{\strdhere\strdputdeadend}
\newcommand*{\strdstart}{\Compose\strdhere\strdputstartlabel}
\newcommand*{\strdend}{\Compose\strdhere\strdputendlabel}

\newcommand*{\strdllabel}{\Compose\strdapply\strdputllabel}
\newcommand*{\strdrlabel}{\Compose\strdapply\strdputrlabel}
\newcommand*{\strdframelabel}{\Compose\strdapply\strdputframelabel}
\newcommand*{\strdregionlabel}{\Compose\strdapply\strdputregionlabel}
\newcommand*{\strdfamilylabel}{\Compose\strdapply\strdputfamilylabel}
\newcommand*{\strdunfamilylabel}{\Compose\strdapply\strdputunfamilylabel}

\newcommand*{\strdllabelat}[2]{\strdapplyat{#1}{\strdputllabel{#2}}}
\newcommand*{\strdrlabelat}[2]{\strdapplyat{#1}{\strdputrlabel{#2}}}
\newcommand*{\strdframelabelat}[2]{\strdapplyat{#1}{\strdputframelabel{#2}}}
\newcommand*{\strdframellabel}{\strdframelabelat{Left}}
\newcommand*{\strdframerlabel}{\strdframelabelat{Right}}

\newcommand*{\strdroadlabel}[2]{\strdapply{\strdputroadlabel{#1}{#2}}}
\newcommand*{\strdroadlabelat}[3]{\strdapplyat{#1}{\strdputroadlabel{#2}{#3}}}

\newcommand*{\strdbranchone}[3]{% {sf}{from}{to}
    \strdcopy{#2}{#3}
    \strduse{#1}{#2}{#3 Branch}%
}
\newcommand*{\strdbranch}{\strdseqin\strdbranchone}

\newcommand*{\strdrestart}[3]{% {node}{from}{to}
    \strdcoord{#1}{#3}%
}

\newcommand*{\strddo}[3]{% {f}{from}{to}
    \strdcopy{#2}{#3}
    \strduse{#1}%
}


% Utilities
%

\newcommand*{\strdrlap}{\Compose\mathrlap\smash}
\newcommand*{\strdllap}{\Compose\mathllap\smash}
\newcommand*{\strdlvert}[1]{\rotatebox[origin=c]{90}{\ensuremath{#1}}}
\newcommand*{\strdrvert}[1]{\rotatebox[origin=c]{-90}{\ensuremath{#1}}}
\newcommand*{\strdunraise}[1]{\mathstrut\raisebox{-\depth}{\ensuremath{#1}}}

