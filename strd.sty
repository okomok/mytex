\ProvidesPackage{strd}

\usepackage{tikz,lambdax,mathtools,graphicx}
\usetikzlibrary{shapes,calc,backgrounds,calc}


% Styles
%

\tikzset{strd normaltextvaligned/.style={text height=1.9ex,text depth=0.65ex}}
\tikzset{strd scripttextvaligned/.style={text height=1.5ex,text depth=0.4ex}}
\tikzset{strd coord/.style={coordinate}}
\tikzset{strd mathnodes/.style={execute at begin node=$,execute at end node=$}}
\tikzset{strd none/.style={opacity=0,text opacity=0,fill opacity=0}}
\tikzset{strd picturevaligned/.style={baseline={([yshift=-0.5ex]current bounding box.center)}}}
\tikzset{strd picture/.style={strd picturevaligned,strd mathnodes,very thin,rounded corners=2pt}}
\tikzset{strd draw/.style={}}


% Layers
%

\pgfdeclarelayer{strd gradedlayer}
\pgfdeclarelayer{strd pavelayer}
\pgfdeclarelayer{strd whitelayer}
\pgfdeclarelayer{strd celllayer}
\pgfdeclarelayer{strd labellayer}
\pgfdeclarelayer{strd framelayer}
\pgfdeclarelayer{strd aroundframelayer}
\pgfsetlayers{background,main,strd pavelayer,strd aroundframelayer,strd gradedlayer,strd framelayer,strd whitelayer,strd celllayer,strd labellayer}

% Layers forget surrounding line styles, so we define...
\newcommand*{\strdresetlinewidth}{\pgfsetlinewidth{0.2pt}}

\newcommand*{\strdonlayer@}[2]{%
    \begin{pgfonlayer}{#1}
        \strdresetlinewidth
        #2
    \end{pgfonlayer}
    \strdresetlinewidth%
}


% Environments 
%

\newcommand*{\strd}[1]{%
    \begin{tikzpicture}[strd picture]
        \strddeclorigin
        #1;
    \end{tikzpicture}%
}
\newcommand*{\strdin}[2]{\Foldr{\strdin@}{#2}{\List{#1}}}
\newcommand*{\strdin@}[2]{\begin{#1}\strd{#2}\end{#1}}


% Constants
%

\newcommand*{\strdxunit}{0.5}
\newcommand*{\strdyunit}{0.8}
\newcommand*{\strdxhalfunit}{0.25}
\newcommand*{\strdyhalfunit}{0.4}
\newcommand*{\strdunitdiff}{0.3}
\newcommand*{\strdunitmergin}{0.1}


% Concepts
%   An _id_ `id` is a name of tikz nodes.
%   A _node_ `node` is a node of tikz.
%   A _string_ `s` is a triple of nodes `s Start`, `s` and `s End`.
%   A _string constructor_ `sc` is a unit-valued function such that `sc{id}{node}` is valid.
%   A _string transformation_ `stm` is an endofunction between string constructors.


% String constructors
%

\newcommand*{\strdstringC}[4]{% {id}{start}{middle}{end}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1) at (#3) {};
    \node[strd coord] (#1 End) at (#4) {};%
}

\newcommand*{\strdcomposeC}[4]{% {nextsc}{prevsc}{id}{node}
    \strduse{#2}{#3 Prev}{#4}
    \strduse{#1}{#3}{#3 Prev End}%
}

\tikzset{strd origin/.style={inner sep=0pt,outer sep=0pt,minimum width=9pt,minimum height=0pt}}

\newcommand*{\strdorigin}{strdorigin}
\newcommand*{\strddeclorigin}{%
    \strdemptyC{strdorigin}{0,0}
    \node[strd origin] at (strdorigin) {};%
}

\newcommand*{\strdempty}{\strdcomposeC\strdemptyC}
\newcommand*{\strdemptyC}[2]{% {id}{node}
    \strdstringC{#1}{#2}{#2}{#2}%
}

\newcommand*{\strdleft}{\strdcomposeC\strdleftC}
\newcommand*{\strdleftC}[2]{% {id}{node}
    \strdstringC{#1}{#2}{$(#2)+(-\strdxunit,-\strdyhalfunit)$}{$(#2)+(-\strdxunit,-\strdyunit)$}
    \node[strd coord] (#1 Corner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \draw[strd draw]{ (#1 Start) parabola (#1 Corner) -- (#1 End) };%
}
\newcommand*{\strdright}{\strdcomposeC\strdrightC}
\newcommand*{\strdrightC}{\strdflipC\strdleftC}

\newcommand*{\strdmid}{\strdcomposeC\strdmidC}
\newcommand*{\strdmidC}[2]{% {id}{node}
    \strdstringC{#1}{#2}{$(#2)+(0,-\strdyhalfunit)$}{$(#2)+(0,-\strdyunit)$}
    \draw[strd draw]{ (#1 Start) -- (#1 End) };%
}

\newcommand*{\strdunleft}{\strdcomposeC\strdunleftC}
\newcommand*{\strdunleftC}[2]{% {id}{node}
    \strdstringC{#1}{#2}{$(#2)+(0,-\strdyhalfunit)$}{$(#2)+(\strdxunit,-\strdyunit)$}
    \node[strd coord] (#1 Corner) at ($(#2)+(0,-\strdxunit)$) {};
    \draw[strd draw]{ (#1 Start) -- (#1 Corner) parabola[bend at end] (#1 End) };%
}
\newcommand*{\strdunright}{\strdcomposeC\strdunrightC}
\newcommand*{\strdunrightC}{\strdflipC\strdunleftC}

% WHATFOR
% \newcommand*{\strdconnectC}[3]{% {id}{s1}{s2}
%     \node[strd coord] (#1 Start) at (#2 Start) {};
%     \node[strd coord] (#1) at (#3 Start) {};
%     \node[strd coord] (#1 End) at (#3 End) {};%
% }

\newcommand*{\strdhleft}{\strdcomposeC\strdhleftC}
\newcommand*{\strdhleftC}[2]{% {id}{node}
    \strdstringC{#1}{#2}{$(#2)+(-\strdxhalfunit,0)$}{$(#2)+(-\strdxunit,0)$}
    \draw[strd draw]{ (#1 Start) -- (#1 End) };%
}
\newcommand*{\strdhright}{\strdcomposeC\strdhrightC}
\newcommand*{\strdhrightC}{\strdflipC\strdhleftC}

\newcommand*{\strdminus}{\strdcomposeC\strdminusC}
\newcommand*{\strdminusC}[2]{% {id}{node}
    \strdxscale@{0.5}{
        \strdhleftC{#1 Left}{#2}
        \strdemptyC{#1}{#2}
        \strdhrightC{#1 Right}{#2}
    }
}

\newcommand*{\strdsubset}{\strdcomposeC\strdsubsetC}
\newcommand*{\strdsubsetC}[2]{% {id}{node}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 StartCorner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 EndCorner) at ($(#2)+(-\strdxunit,-\strdxunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(0,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) parabola (#1 StartCorner) -- (#1 EndCorner) parabola[bend at end] (#1 End)
    };%
}
\newcommand*{\strdsupset}{\strdcomposeC\strdsupsetC}
\newcommand*{\strdsupsetC}{\strdflipC\strdsubsetC}

\newcommand*{\strdlint}{\strdcomposeC\strdlintC}
\newcommand*{\strdlintC}[2]{% {id}{node}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 StartCorner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 EndCorner) at ($(#2)+(-\strdxunit,-\strdxunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(-1,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) parabola (#1 StartCorner) -- (#1 EndCorner) parabola[bend at end] (#1 End)
    };%
}
\newcommand*{\strdrint}{\strdcomposeC\strdrintC}
\newcommand*{\strdrintC}{\strdflipC\strdlintC}

\newcommand*{\strdlchange}{\strdcomposeC\strdlchangeC}
\newcommand*{\strdlchangeC}[2]{% {id}{node}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 StartCorner) at ($(#2)+(0,-\strdunitmergin)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 EndCorner) at ($(#1)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1 End) at ($(#1)+(-\strdxunit,-\strdyhalfunit)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 StartCorner) parabola[bend at end] (#1) parabola (#1 EndCorner) -- (#1 End)
    };%
}
\newcommand*{\strdrchange}{\strdcomposeC\strdrchangeC}
\newcommand*{\strdrchangeC}{\strdflipC\strdlchangeC}

\newcommand*{\strdjump}{\strdcomposeC\strdjumpC}
\newcommand*{\strdjumpC}{\strdnoneC\strdmidC}
\newcommand*{\strdljump}{\strdcomposeC\strdljumpC}
\newcommand*{\strdljumpC}{\strdnoneC\strdhleftC}
\newcommand*{\strdrjump}{\strdcomposeC\strdrjumpC}
\newcommand*{\strdrjumpC}{\strdnoneC\strdhrightC}
\newcommand*{\strddup}{\strdcomposeC\strddupC}
\newcommand*{\strddupC}{\strdnoneC\strdminusC}

\newcommand*{\strdjumptoC}[3]{% {id}{fromnode}{tonode}
    \strdstringC{#1}{#2}{$(#2)!.5!(#3)$}{#3}%
}

\newcommand*{\strdsqsubsettoC}[3]{% {id}{fromnode}{tonode}
    % Note \getlastxy doesn't work with calc.
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 End) at (#3) {};
    \node[strd coord] (#1 StartCorner) at ($(#1 Start)+(-\strdxunit,0)$) {};
    \node[strd coord] (#1 EndCorner) at ({#1 StartCorner} |- {#1 End}) {};
    \node[strd coord] (#1) at ($(#1 StartCorner)!.5!(#1 EndCorner)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 StartCorner) -- (#1 EndCorner) -- (#1 End)
    };%
}
\newcommand*{\strdsqsupsettoC}{\Compose\strdflipC\strdsqsubsettoC}

\newcommand*{\strdsqsubset}{\strdcomposeC\strdsqsubsetC}
\newcommand*{\strdsqsubsetC}[2]{% {id}{node}
    \strdjumpC{#1 Impl}{#2}
    \strdsqsubsettoC{#1}{#2}{#1 Impl End}%
}
\newcommand*{\strdsqsupset}{\strdcomposeC\strdsqsupsetC}
\newcommand*{\strdsqsupsetC}{\strdflipC\strdsqsubsetC}

\newcommand*{\strdsquare}{\strdcomposeC\strdsquareC}
\newcommand*{\strdsquareC}[2]{% {id}{node}
    \strdsqsubsetC{#1 Left}{#2}
    \strdsqsupsetC{#1 Right}{#2}
    \strdjumpC{#1}{#2}%
}

\newcommand*{\strdcap}{\strdcomposeC\strdcapC}
\newcommand*{\strdcapC}[2]{% {id}{node}
    \strdleftC{#1 Left}{#2}
    \strdrightC{#1 Right}{#2}
    \strdjumpC{#1}{#2}%
}

\newcommand*{\strdcup}{\strdcomposeC\strdcupC}
\newcommand*{\strdcupC}[2]{% {id}{node}
    \strdxscale@{2}{\strddupC{#1 Dup}{#2}}
    \strdunleftC{#1 Left}{#1 Dup Left End}
    \strdunrightC{#1 Right}{#1 Dup Right End}
    \strdjumpC{#1}{#2}%
}

\newcommand*{\strdparallel}{\strdcomposeC\strdparallelC}
\newcommand*{\strdparallelC}[2]{% {id}{node}
    \strddupC{#1 Dup}{#2}
    \strdmidC{#1 Left}{#1 Dup Left}
    \strdmidC{#1 Right}{#1 Dup Right}
    \strdjumpC{#1}{#2}%
}

\newcommand*{\strdcircle}{\strdcomposeC\strdcircleC}
\newcommand*{\strdcircleC}[2]{% {id}{node}
    \strdsubsetC{#1 Left}{#2}
    \strdsupsetC{#1 Right}{#2}
    \strdjumpC{#1}{#2}%
}


% Dots

\tikzset{strd dot/.style={circle,draw=black,fill=black,minimum size=1.5pt,inner sep=0pt}}
\tikzset{strd whitedot/.style={circle,draw=white,fill=white,minimum size=3pt,inner sep=0pt}}

\newcommand*{\strdputdot}[1]{% {node}
    \strdonlayer@{strd celllayer}{
        \node[strd dot] at (#1) {};
    }%
}

\newcommand*{\strdputwhitedot}[1]{% {node}
    \node[strd whitedot] at (#1) {};%
}


% Cells
%

\tikzset{strd cellbase/.style={font=\normalsize,solid,draw,fill=white,rectangle,minimum size=9pt,inner xsep=0.6pt,inner ysep=1.2pt}}
\tikzset{strd cell/.style={strd cellbase,very thin}}
\tikzset{strd mapcell/.style={strd cellbase,thin}}
\tikzset{strd bijcell/.style={strd cellbase,very thin,sharp corners}}

\newcommand*{\strdputcellof}[3]{% {style}{text}{node}
    \strdonlayer@{strd celllayer}{
        \node[#1] at (#3) {#2};
    }% 
}
\newcommand*{\strdputcell}{\strdputcellof{strd cell}}
\newcommand*{\strdputmapcell}{\strdputcellof{strd mapcell}}
\newcommand*{\strdputbijcell}{\strdputcellof{strd bijcell}}


% Frames
%

\tikzset{strd mapframe/.style={solid,thin,rounded corners=2pt}}
\tikzset{strd bijframe/.style={solid,thin,sharp corners}}

\newcommand*{\strdframeof}[3]{\strdseqin{\strdframeofone{#1}{#2}{#3}}}
\newcommand*{\strdframeofone}[7]{% {style}{xl}{xr}{stm}{sc}{id}{node}
    \strduse{#5}{#6 Prev}{#7}
    \strduse{#4}{\strdemptyC}{#6 Unframe}{#6 Prev End}
    \strdonlayer@{strd framelayer}{
        \strdpathis@{#1}{
            \strdxscale@{#2}{
                \strdsqsubsettoC{#6 Left}{#6 Prev End}{#6 Unframe End}
            }
            \strdxscale@{#3}{
                \strdsqsupsettoC{#6 Right}{#6 Prev End}{#6 Unframe End}
            }
            \strdjumptoC{#6}{#6 Prev End}{#6 Unframe End}
         }
     }%
}

\newcommand*{\strdmapframe}{\strdframeof{strd mapframe}}
\newcommand*{\strdbijframe}{\strdframeof{strd bijframe}}


% Around frames

\tikzset{strd aroundframe/.style={circle,draw=white,fill=white,minimum size=3pt,inner sep=0pt}}
\tikzset{strd roadaroundframe/.style={rectangle,sharp corners,draw=white,fill=white,minimum width=4pt,minimum height=3pt,inner sep=0pt}}

\newcommand*{\strdaroundframe@}[1]{\strdonlayer@{strd aroundframelayer}{#1}}
\newcommand*{\strdputaroundframe}[1]{\strdaroundframe@{\node[strd aroundframe] at (#1) {};}}
\newcommand*{\strdputroadaroundframe}[1]{\strdaroundframe@{\node[strd roadaroundframe] at (#1) {};}}


% Labels
%

\tikzset{strd sidelabel/.style={font=\scriptsize,inner sep=0.2pt,strd scripttextvaligned}}
\tikzset{strd familylabel/.style={font=\scriptsize,inner xsep=0.2pt,inner ysep=-0.4pt,strd scripttextvaligned}}
\tikzset{strd framelabel/.style={font=\scriptsize,fill=white,inner sep=0.4pt,inner ysep=0.8pt}}
\tikzset{strd edgelabel/.style={font=\normalsize,inner sep=1.2pt}}%,strd normaltextvaligned}}

\newcommand*{\strdlabel@}[1]{\strdonlayer@{strd labellayer}{#1}}
\newcommand*{\strdputllabel}[2]{\strdlabel@{\node[strd sidelabel,left] at (#2) {#1};}}
\newcommand*{\strdputrlabel}[2]{\strdlabel@{\node[strd sidelabel,right] at (#2) {#1};}}
\newcommand*{\strdputframelabel}[2]{\strdlabel@{\node[strd framelabel] at (#2) {#1};}}
\newcommand*{\strdputfamilylabel}[2]{\strdlabel@{\node[strd familylabel,above right] at (#2 Right EndCorner) {#1};}}
\newcommand*{\strdputunfamilylabel}[2]{\strdlabel@{\node[strd familylabel,above left] at (#2 Right EndCorner) {#1};}}
\newcommand*{\strdputregionlabel}[2]{\strdlabel@{\node[strd familylabel,below left] at (#2 Right StartCorner) {#1};}}
\newcommand*{\strdputedgelabelat}[3]{\strdlabel@{\node[strd edgelabel,#1] at (#3) {#2};}}
\newcommand*{\strdputstartlabel}[2]{\strdputedgelabelat{above}{#1}{#2 Start}}
\newcommand*{\strdputendlabel}[2]{\strdputedgelabelat{below}{#1}{#2 End}}


% WHATFOR
% White strings
%

\tikzset{strd edgenoise/.style={shorten >= -0.2pt,shorten <= -0.2pt}}
\tikzset{strd white/.style={draw=white,line width=3pt,strd edgenoise}}

\newcommand*{\strdwhite}[3]{%
    \strdonlayer@{strd whitelayer}{
        \strdscope@{strd white}{\strduse{#1}{#2}{#3}}
    }%
}


% Graded strings; order depends
%   You must wrap each string because of layers-reset-line-width bug.
%   BTW, tikz/double doesn't work with scopes.

\newcommand*{\strdgradedC}[3]{% {sc}{id}{node}
    \strdonlayer@{strd gradedlayer}{
        \strdscope@{strd white}{\strduse{#1}{#2 Graded}{#3}}
        \strdscope@{strd edgenoise}{\strduse{#1}{#2}{#3}}
    }%
}
\newcommand*{\strdgraded}[4]{% {stm}{sc}{id}{node}
    \strduse{#2}{#3 Prev}{#4}
    \strdonlayer@{strd gradedlayer}{
        \strdscope@{strd white}{
            \strduse{#1}{\strdemptyC}{#3 Graded}{#3 Prev End}
        }
        \strdscope@{strd edgenoise}{
            \strduse{#1}{\strdemptyC}{#3}{#3 Prev End}
        }
    }%
}

\newcommand*{\strdroadgradedC}[3]{% {sc}{id}{node}
    \strdonlayer@{strd gradedlayer}{
        \strdscope@{strd roadbase}{\strduse{#1}{#2}{#3}}
        \strdscope@{strd roadpave}{\strduse{#1}{#2 Paved}{#3}}
    }%
}
\newcommand*{\strdroadgraded}[4]{% {stm}{sc}{id}{node}
    \strduse{#2}{#3 Prev}{#4}
    \strdonlayer@{strd gradedlayer}{
        \strdscope@{strd roadbase}{
            \strduse{#1}{\strdemptyC}{#3}{#3 Prev End}
        }
        \strdscope@{strd roadpave}{
            \strduse{#1}{\strdemptyC}{#3 Paved}{#3 Prev End}
        }
    }%
}

% Roads
%   Keep scaling away by '--'.
%

\tikzset{strd roadcolor/.style={gray!18,text=black}}
\tikzset{strd roadbase/.style={line width=3.05pt}}
\tikzset{strd roadpave/.style={line width=2.65pt,strd edgenoise,strd roadcolor}}

\newcommand*{\strdroadC}[3]{% {sc}{id}{node}
    \strdscope@{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdonlayer@{strd pavelayer}{
        \strdscope@{strd roadpave}{\strduse{#1}{#2 Paved}{#3}}
    }%
}
\newcommand*{\strdroad}[4]{% {stm}{sc}{id}{node}
    \strduse{#2}{#3 Prev}{#4}
    \strdscope@{strd roadbase}{
        \strduse{#1}{\strdemptyC}{#3}{#3 Prev End}
    }
    \strdonlayer@{strd pavelayer}{
        \strdscope@{strd roadpave}{
            \strduse{#1}{\strdemptyC}{#3 Paved}{#3 Prev End}
        }
    }%
}

% Crossable road; order depends
\newcommand*{\strdroadxC}[3]{% {sc}{id}{node}
    \strdscope@{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdscope@{strd roadpave}{\strduse{#1}{#2 Paved}{#3}}%
}
\newcommand*{\strdroadx}[4]{% {stm}{sc}{id}{node}
    \strduse{#2}{#3 Prev}{#4}
    \strdscope@{strd roadbase}{
        \strduse{#1}{\strdemptyC}{#3}{#3 Prev End}
    }
    \strdscope@{strd roadpave}{
        \strduse{#1}{\strdemptyC}{#3 Paved}{#3 Prev End}
    }%
}

% Slightly noisy around anti-aliasing
\newcommand*{\strdputdeadend}[1]{% {node}
    \strdonlayer@{strd whitelayer}{
        \draw[strd draw,white,line width=4pt,shorten >=-1pt] {
            ($(#1)+(0,10.16pt)$) -- (#1)
        };
        \draw[strd draw,strd roadbase]{
            ($(#1)+(0,10.16pt)$) -- ($(#1)+(0,10.36pt)$)
        };
    }%
}

\newcommand*{\strdputroadlabel}[3]{% {ltext}{rtext}{node}
    \strdonlayer@{strd labellayer}{
        \node[strd sidelabel,left,xshift=-1.5pt] at (#3) {#1};
        \node[strd sidelabel,right,xshift=1.5pt] at (#3) {#2};
    }%
}

\newcommand*{\strdroadlasideC}[2]{\strdemptyC{#1}{$(#2)+(-0.05,0)$}}
\newcommand*{\strdroadlaside}{\strdcomposeC\strdroadlasideC}
\newcommand*{\strdroadrasideC}{\strdflipC\strdroadlasideC}
\newcommand*{\strdroadraside}{\strdcomposeC\strdroadrasideC}


% Scoped transformations
%

\newcommand*{\strdscope@}[2]{\begin{scope}[#1]#2\end{scope}}
\newcommand*{\strdflip@}{\strdscope@{xscale=-1}}
\newcommand*{\strdinv@}{\strdscope@{yscale=-1}}
\newcommand*{\strdxscale@}[1]{\strdscope@{xscale=#1}}
\newcommand*{\strdyscale@}[1]{\strdscope@{yscale=#1}}
\newcommand*{\strdscale@}[2]{\strdscope@{xscale=#1,yscale=#2}}
\newcommand*{\strdnone@}{\strdscope@{every path/.style=strd none,every node/.style=strd none}}
\newcommand*{\strdnolabels@}{\strdscope@{every node/.style=strd none}}
\newcommand*{\strdpathis@}[1]{\strdscope@{every path/.style=#1}}
\newcommand*{\strdnodeis@}[1]{\strdscope@{every node/.append style=#1}}
\newcommand*{\strdimplicit@}{\strdpathis@{densely dotted}}

\newcommand*{\strdtoC}[4]{\strduse{#1}{\strduse{#2}{#3}{#4}}}
\newcommand*{\strdonlayerC}{\Compose\strdtoC\strdonlayer@}
\newcommand*{\strdscopeC}{\Compose\strdtoC\strdscope@}
\newcommand*{\strdflipC}{\strdtoC\strdflip@}
\newcommand*{\strdinvC}{\strdtoC\strdinv@}
\newcommand*{\strdnoneC}{\strdtoC\strdnone@}
\newcommand*{\strdscaleC}[2]{\strdtoC{\strdscale@{#1}{#2}}}
\newcommand*{\strdxscaleC}{\Compose\strdtoC\strdxscale@}
\newcommand*{\strdyscaleC}{\Compose\strdtoC\strdyscale@}
\newcommand*{\strdxhalfC}{\strdxscaleC{0.5}}
\newcommand*{\strdyhalfC}{\strdyscaleC{0.5}}
\newcommand*{\strdxdoubleC}{\strdxscaleC{2}}
\newcommand*{\strdydoubleC}{\strdyscaleC{2}}
\newcommand*{\strdimplicitC}{\strdtoC\strdimplicit@}

\newcommand*{\strdtoT}[5]{% {opt}{stm}{sc}{id}{node}
    \strduse{#3}{#4 Prev}{#5}
    \strduse{#1}{\strduse{#2}{\strdemptyC}{#4}{#4 Prev End}}
}
\newcommand*{\strdonlayer}{\Compose\strdtoT\strdonlayer@}
\newcommand*{\strdscope}{\Compose\strdtoT\strdscope@}
\newcommand*{\strdflip}{\strdtoT\strdflip@}
\newcommand*{\strdinv}{\strdtoT\strdinv@}
\newcommand*{\strdnone}{\strdtoT\strdnone@}
\newcommand*{\strdscale}[2]{\strdtoT{\strdscale@{#1}{#2}}}
\newcommand*{\strdxscale}{\Compose\strdtoT\strdxscale@}
\newcommand*{\strdyscale}{\Compose\strdtoT\strdyscale@}
\newcommand*{\strdxhalf}{\strdxscale{0.5}}
\newcommand*{\strdyhalf}{\strdyscale{0.5}}
\newcommand*{\strdxdouble}{\strdxscale{2}}
\newcommand*{\strdydouble}{\strdyscale{2}}
\newcommand*{\strdimplicit}{\strdtoT\strdimplicit@}


% Sequence-style construction
%

\newcommand*{\strdseq}[1]{\Foldr{\Then}{\Identity}{\List{#1}}}
\newcommand*{\strdseqin}[2]{\strduse{#1}{\strdseq{#2}}}

\newcommand*{\strdgathered}[1]{% {sa1,sa2,..,saN}
    \strdin{gathered}{
        \strdseq{#1}{\strdemptyC}{TheStrd}{\strdorigin}
    }%
}

\newcommand*{\strdassign}[5]{% {name}{stm}{sc}{id}{node}
    \strduse{#2}{#3}{#4}{#5}
    \strdnone{\strduse{#2}}{#3}{#1}{#5}%
}


% String transformations
%

\newcommand*{\strdwith}[4]{% {h}{sc}{id}{node}
    \strduse{#2}{#3}{#4}
    \strduse{#1}{#3}%
}
\newcommand*{\strdwithat}[5]{% {at}{h}{sc}{id}{node}
    \strduse{#3}{#4}{#5}
    \strduse{#2}{#4 #1}%
}
\newcommand*{\strdhere}{\strdwithat{End}}

\newcommand*{\strddot}{\strdhere\strdputdot}
\newcommand*{\strdwhitedot}{\strdwithat{Start}{\strdputwhitedot}}
\newcommand*{\strdcell}{\Compose\strdhere\strdputcell}
\newcommand*{\strdmapcell}{\Compose\strdhere\strdputmapcell}
\newcommand*{\strdbijcell}{\Compose\strdhere\strdputbijcell}
\newcommand*{\strdaroundframe}{\strdhere\strdputaroundframe}
\newcommand*{\strdroadaroundframe}{\strdhere\strdputroadaroundframe}
\newcommand*{\strddeadend}{\strdhere\strdputdeadend}

\newcommand*{\strdllabel}{\Compose\strdwith\strdputllabel}
\newcommand*{\strdrlabel}{\Compose\strdwith\strdputrlabel}
\newcommand*{\strdframelabel}{\Compose\strdwith\strdputframelabel}
\newcommand*{\strdregionlabel}{\Compose\strdwith\strdputregionlabel}
\newcommand*{\strdfamilylabel}{\Compose\strdwith\strdputfamilylabel}
\newcommand*{\strdunfamilylabel}{\Compose\strdwith\strdputunfamilylabel}
\newcommand*{\strdstart}{\Compose\strdwith\strdputstartlabel}
\newcommand*{\strdend}{\Compose\strdwith\strdputendlabel}

\newcommand*{\strdllabelat}[2]{\strdwithat{#1}{\strdputllabel{#2}}}
\newcommand*{\strdrlabelat}[2]{\strdwithat{#1}{\strdputrlabel{#2}}}
\newcommand*{\strdframelabelat}[2]{\strdwithat{#1}{\strdputframelabel{#2}}}
\newcommand*{\strdframellabel}{\strdframelabelat{Left}}
\newcommand*{\strdframerlabel}{\strdframelabelat{Right}}

\newcommand*{\strdroadlabel}[2]{\strdwith{\strdputroadlabel{#1}{#2}}}
\newcommand*{\strdroadlabelat}[3]{\strdwithat{#1}{\strdputroadlabel{#2}{#3}}}

\newcommand*{\strdbranch}{\strdseqin\strdbranch@}
\newcommand*{\strdbranch@}[4]{% {stm}{sc}{id}{node}
    \strduse{#2}{#3}{#4}
    \strduse{#1}{\strdemptyC}{#3 Branch}{#3 End}
}

\newcommand*{\strdrestart}[4]{% {stm}{sc}{id}{node}
    \strduse{#2}{#3}{#4}
    \strduse{#1}{\strdemptyC}{#3 Restart}{\strdorigin}%
}


% Utilities
%

\newcommand*{\strduse}{\Identity}
\newcommand*{\strdrlap}{\Compose\mathrlap\smash}
\newcommand*{\strdllap}{\Compose\mathllap\smash}
\newcommand*{\strdlvert}[1]{\rotatebox[origin=c]{90}{\ensuremath{#1}}}
\newcommand*{\strdrvert}[1]{\rotatebox[origin=c]{-90}{\ensuremath{#1}}}
\newcommand*{\strdunraise}[1]{\mathstrut\raisebox{-\depth}{\ensuremath{#1}}}

