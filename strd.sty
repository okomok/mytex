\ProvidesPackage{strd}

\usepackage{tikz,lambdax,mathtools,graphicx}
\usetikzlibrary{shapes,calc,backgrounds,calc}


\newcommand*{\strduse}{\Identity}


% Styles
%

\tikzset{strd normaltextvaligned/.style={text height=1.9ex,text depth=0.65ex}}
\tikzset{strd scripttextvaligned/.style={text height=1.5ex,text depth=0.4ex}}
\tikzset{strd coord/.style={coordinate}}
\tikzset{strd mathnodes/.style={execute at begin node=$,execute at end node=$}}
\tikzset{strd none/.style={opacity=0,text opacity=0,fill opacity=0}}
\tikzset{strd picturevaligned/.style={baseline={([yshift=-0.5ex]current bounding box.center)}}}
\tikzset{strd picture/.style={strd picturevaligned,strd mathnodes,very thin,rounded corners=2pt}}
\tikzset{strd draw/.style={}}


% Layers
%

\pgfdeclarelayer{strd gradedlayer}
\pgfdeclarelayer{strd pavelayer}
\pgfdeclarelayer{strd whitelayer}
\pgfdeclarelayer{strd celllayer}
\pgfdeclarelayer{strd labellayer}
\pgfdeclarelayer{strd framelayer}
\pgfdeclarelayer{strd aroundframelayer}
\pgfsetlayers{background,main,strd pavelayer,strd aroundframelayer,strd framelayer,strd gradedlayer,strd whitelayer,strd celllayer,strd labellayer}

% Layers forget surrounding line styles, so we define...
\newcommand*{\strdresetlinewidth}{\pgfsetlinewidth{0.2pt}}

\newcommand*{\strdscopeonlayer}[2]{%
    \begin{pgfonlayer}{#1}
        \strdresetlinewidth
        #2
    \end{pgfonlayer}
    \strdresetlinewidth%
}

\newcommand*{\strdonlayer}[4]{% {layer}{sc}{newid}{fromnode}
    \strdscopeonlayer{#1}{
        \strduse{#2}{#3}{#4}
    }%
}


% Environmentals 
%

\newcommand*{\strd}[1]{%
    \begin{tikzpicture}[strd picture]
        \strddeclorigin
        #1;
    \end{tikzpicture}%
}

\newcommand*{\strdin}[2]{%
    \Foldr{\strdinimpl}{#2}{\BraceListize{#1}}%
}
\newcommand*{\strdinimpl}[2]{%
    \begin{#1}
%       \! % why needed?
        \strd{#2}
    \end{#1}%
}

% Constants
%

\newcommand*{\strdxunit}{0.5}
\newcommand*{\strdyunit}{0.8}
\newcommand*{\strdxhalfunit}{0.25}
\newcommand*{\strdyhalfunit}{0.4}
\newcommand*{\strdunitdiff}{0.3}
\newcommand*{\strdunitmergin}{0.1}


% Concepts
%   An _id_ `id` is a name of tikz nodes.
%   A _node_ `node` is a node of tikz.
%   A _string_ `s` is a triple of nodes `s Start`, `s` and `s End`.
%   A _string constructor_ `sc` is a unit-valued function such that `sc{id}{node}` is valid.
%   A _string transformation_ `stm` is an endofunction between string constructors.


% String constructors
%

\newcommand*{\strdnewstring}[4]{% {newid}{start}{middle}{end}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1) at (#3) {};
    \node[strd coord] (#1 End) at (#4) {};%
}

\newcommand*{\strdnewcompose}[4]{% {nextsc}{prevsc}{newid}{fromnode}
    \strduse{#2}{#3 Prev}{#4}
    \strduse{#1}{#3}{#3 Prev End}
}

\tikzset{strd origin/.style={inner sep=0pt,outer sep=0pt,minimum width=9pt,minimum height=0pt}}

\newcommand*{\strddeclorigin}{%
    \strdnewempty{strdorigin}{0,0}
    \node[strd origin] at (strdorigin) {};%
}
\newcommand*{\strdorigin}{strdorigin}

\newcommand*{\strdnewempty}[2]{% {newid}{fromnode}
    \strdnewstring{#1}{#2}{#2}{#2}
}
\newcommand*{\strdempty}{\strdnewcompose\strdnewempty}

\newcommand*{\strdnewleft}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 Corner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(-\strdxunit,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) parabola (#1 Corner) -- (#1 End)
    };%
}
\newcommand*{\strdleft}{\strdnewcompose\strdnewleft}

\newcommand*{\strdnewright}{\strdnewflip\strdnewleft}
\newcommand*{\strdright}{\strdnewcompose\strdnewright}

\newcommand*{\strdnewmid}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1) at ($(#2)+(0,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(0,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 End)
    };%
}
\newcommand*{\strdmid}{\strdnewcompose\strdnewmid}

\newcommand*{\strdnewunleft}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1) at ($(#2)+(0,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 Corner) at ($(#2)+(0,-\strdxunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(\strdxunit,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 Corner) parabola[bend at end] (#1 End)
    };%
}
\newcommand*{\strdunleft}{\strdnewcompose\strdnewunleft}

\newcommand*{\strdnewunright}{\strdnewflip\strdnewunleft}
\newcommand*{\strdunright}{\strdnewcompose\strdnewunright}

% WHATFOR
% \newcommand*{\strdnewconnect}[3]{% {newid}{s1}{s2}
%     \node[strd coord] (#1 Start) at (#2 Start) {};
%     \node[strd coord] (#1) at (#3 Start) {};
%     \node[strd coord] (#1 End) at (#3 End) {};%
% }

\newcommand*{\strdnewhleft}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxhalfunit,0)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(-\strdxunit,0)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 End)
    };%
}
\newcommand*{\strdhleft}{\strdnewcompose\strdnewhleft}

\newcommand*{\strdnewhright}{\strdnewflip\strdnewhleft}
\newcommand*{\strdhright}{\strdnewcompose\strdnewhright}

\newcommand*{\strdnewminus}[2]{% {newid}{fromnode}
    \strdscopexscale{0.5}{
        \strdnewhleft{#1 Left}{#2}
        \strdnewempty{#1}{#2}
        \strdnewhright{#1 Right}{#2}
    }
}
\newcommand*{\strdminus}{\strdnewcompose\strdnewminus}

\newcommand*{\strdnewsubset}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 StartCorner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 EndCorner) at ($(#2)+(-\strdxunit,-\strdxunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(0,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) parabola (#1 StartCorner) -- (#1 EndCorner) parabola[bend at end] (#1 End)
    };%
}
\newcommand*{\strdsubset}{\strdnewcompose\strdnewsubset}

\newcommand*{\strdnewsupset}{\strdnewflip\strdnewsubset}
\newcommand*{\strdsupset}{\strdnewcompose\strdnewsupset}

\newcommand*{\strdnewlint}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 StartCorner) at ($(#2)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 EndCorner) at ($(#2)+(-\strdxunit,-\strdxunit)$) {};
    \node[strd coord] (#1 End) at ($(#2)+(-1,-\strdyunit)$) {};
    \draw[strd draw]{
        (#1 Start) parabola (#1 StartCorner) -- (#1 EndCorner) parabola[bend at end] (#1 End)
    };%
}
\newcommand*{\strdlint}{\strdnewcompose\strdnewlint}

\newcommand*{\strdnewrint}{\strdnewflip\strdnewlint}
\newcommand*{\strdrint}{\strdnewcompose\strdnewrint}

\newcommand*{\strdnewlchange}[2]{% {newid}{fromnode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 StartCorner) at ($(#2)+(0,-\strdunitmergin)$) {};
    \node[strd coord] (#1) at ($(#2)+(-\strdxunit,-\strdyhalfunit)$) {};
    \node[strd coord] (#1 EndCorner) at ($(#1)+(-\strdxunit,-\strdunitdiff)$) {};
    \node[strd coord] (#1 End) at ($(#1)+(-\strdxunit,-\strdyhalfunit)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 StartCorner) parabola[bend at end] (#1) parabola (#1 EndCorner) -- (#1 End)
    };%
}
\newcommand*{\strdlchange}{\strdnewcompose\strdnewlchange}

\newcommand*{\strdnewrchange}{\strdnewflip\strdnewlchange}
\newcommand*{\strdrchange}{\strdnewcompose\strdnewrchange}

\newcommand*{\strdnewjump}{\strdnewnone\strdnewmid}
\newcommand*{\strdjump}{\strdnewcompose\strdnewjump}

\newcommand*{\strdnewljump}{\strdnewnone\strdnewhleft}
\newcommand*{\strdljump}{\strdnewcompose\strdnewljump}

\newcommand*{\strdnewrjump}{\strdnewnone\strdnewhright}
\newcommand*{\strdrjump}{\strdnewcompose\strdnewrjump}

\newcommand*{\strdnewdup}{\strdnewnone\strdnewminus}
\newcommand*{\strddup}{\strdnewcompose\strdnewdup}

\newcommand*{\strdnewjumpto}[3]{% {newid}{fromnode}{tonode}
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 End) at (#3) {};
    \node[strd coord] (#1) at ($(#1 Start)!.5!(#1 End)$) {};%
}

\newcommand*{\strdnewsqsubsetto}[3]{% {newid}{fromnode}{tonode}
    % Note \getlastxy doesn't work with calc.
    \node[strd coord] (#1 Start) at (#2) {};
    \node[strd coord] (#1 End) at (#3) {};
    \node[strd coord] (#1 StartCorner) at ($(#1 Start)+(-\strdxunit,0)$) {};
    \node[strd coord] (#1 EndCorner) at ({#1 StartCorner} |- {#1 End}) {};
    \node[strd coord] (#1) at ($(#1 StartCorner)!.5!(#1 EndCorner)$) {};
    \draw[strd draw]{
        (#1 Start) -- (#1 StartCorner) -- (#1 EndCorner) -- (#1 End)
    };%
}
\newcommand*{\strdnewsqsupsetto}{\Compose\strdnewflip\strdnewsqsubsetto}

\newcommand*{\strdnewsqsubset}[2]{% {newid}{fromnode}
    \strdnewjump{#1 Impl}{#2}
    \strdnewsqsubsetto{#1}{#2}{#1 Impl End}%
}
\newcommand*{\strdsqsubset}{\strdnewcompose\strdnewsqsubset}

\newcommand*{\strdnewsqsupset}{\strdnewflip\strdnewsqsubset}
\newcommand*{\strdsqsupset}{\strdnewcompose\strdnewsqsupset}

\newcommand*{\strdnewsquare}[2]{% {newid}{fromnode}
    \strdnewsqsubset{#1 Left}{#2}
    \strdnewsqsupset{#1 Right}{#2}
    \strdnewjump{#1}{#2}%
}
\newcommand*{\strdsquare}{\strdnewcompose\strdnewsquare}

\newcommand*{\strdnewcap}[2]{% {newid}{fromnode}
    \strdnewleft{#1 Left}{#2}
    \strdnewright{#1 Right}{#2}
    \strdnewjump{#1}{#2}%
}
\newcommand*{\strdcap}{\strdnewcompose\strdnewcap}

\newcommand*{\strdnewcup}[2]{% {newid}{fromnode}
    \strdscopexscale{2}{\strdnewdup{#1 Dup}{#2}}
    \strdnewunleft{#1 Left}{#1 Dup Left}
    \strdnewunright{#1 Right}{#1 Dup Right}
    \strdnewjump{#1}{#2}%
}
\newcommand*{\strdcup}{\strdnewcompose\strdnewcup}

\newcommand*{\strdnewparallel}[2]{% {newid}{fromnode}
    \strdnewdup{#1 Dup}{#2}
    \strdnewmid{#1 Left}{#1 Dup Left}
    \strdnewmid{#1 Right}{#1 Dup Right}
    \strdnewjump{#1}{#2}%
}
\newcommand*{\strdparallel}{\strdnewcompose\strdnewparallel}

\newcommand*{\strdnewcircle}[2]{% {newid}{fromnode}
    \strdnewsubset{#1 Left}{#2}
    \strdnewsupset{#1 Right}{#2}
    \strdnewjump{#1}{#2}%
}
\newcommand*{\strdcircle}{\strdnewcompose\strdnewcircle}


% Dots

\tikzset{strd dot/.style={circle,draw=black,fill=black,minimum size=1.5pt,inner sep=0pt}}
\tikzset{strd whitedot/.style={circle,draw=white,fill=white,minimum size=3pt,inner sep=0pt}}

\newcommand*{\strdputdot}[1]{% {fromnode}
    \strdscopeonlayer{strd celllayer}{
        \node[strd dot] at (#1) {};
    }%
}

\newcommand*{\strdputwhitedot}[1]{% {fromnode}
    \node[strd whitedot] at (#1) {};%
}


% Cells
%

\tikzset{strd cellbase/.style={font=\normalsize,solid,draw,fill=white,rectangle,minimum size=9pt,inner xsep=0.6pt,inner ysep=1.2pt}}
\tikzset{strd cell/.style={strd cellbase,very thin}}
\tikzset{strd mapcell/.style={strd cellbase,thin}}
\tikzset{strd bijcell/.style={strd cellbase,very thin,sharp corners}}

\newcommand*{\strdputcellof}[3]{% {style}{text}{fromnode}
    \strdscopeonlayer{strd celllayer}{
        \node[#1] at (#3) {#2};
    }% 
}
\newcommand*{\strdputcell}{\strdputcellof{strd cell}}
\newcommand*{\strdputmapcell}{\strdputcellof{strd mapcell}}
\newcommand*{\strdputbijcell}{\strdputcellof{strd bijcell}}


% Frames
%

\tikzset{strd mapframe/.style={solid,thin,rounded corners=2pt}}
\tikzset{strd bijframe/.style={solid,thin,sharp corners}}

\newcommand*{\strdframeofone}[7]{% {style}{xl}{xr}{stm}{sc}{newid}{fromnode}
    \strduse{#4}{#5}{#6 Unframe}{#7}
    \strdnewnone{#5}{#6 Prev}{#7}
    \strdscopeonlayer{strd framelayer}{
        \strdscopepathis{#1}{
            \strdscopexscale{#2}{
                \strdnewsqsubsetto{#6 Left}{#6 Prev End}{#6 Unframe End}
            }
            \strdscopexscale{#3}{
                \strdnewsqsupsetto{#6 Right}{#6 Prev End}{#6 Unframe End}
            }
            \strdnewjumpto{#6}{#6 Prev End}{#6 Unframe End}
         }
     }%
}
\newcommand*{\strdframeof}[3]{\strdseqin{\strdframeofone{#1}{#2}{#3}}}

\newcommand*{\strdmapframe}{\strdframeof{strd mapframe}}
\newcommand*{\strdbijframe}{\strdframeof{strd bijframe}}


% Around frames

\tikzset{strd aroundframe/.style={circle,draw=white,fill=white,minimum size=3pt,inner sep=0pt}}
\tikzset{strd roadaroundframe/.style={rectangle,sharp corners,draw=white,fill=white,minimum width=4pt,minimum height=3pt,inner sep=0pt}}

\newcommand*{\strdputaroundframe}[1]{% {fromnode}
    \strdscopeonlayer{strd aroundframelayer}{
        \node[strd aroundframe] at (#1) {};
    }% 
}

\newcommand*{\strdputroadaroundframe}[1]{% {fromnode}
    \strdscopeonlayer{strd aroundframelayer}{
        \node[strd roadaroundframe] at (#1) {};
    }% 
}


% Labels
%

\tikzset{strd sidelabel/.style={font=\scriptsize,inner sep=0.2pt,strd scripttextvaligned}}
\tikzset{strd familylabel/.style={font=\scriptsize,inner xsep=0.2pt,inner ysep=-0.4pt,strd scripttextvaligned}}
\tikzset{strd framelabel/.style={font=\scriptsize,fill=white,inner sep=0.4pt,inner ysep=0.8pt}}
\tikzset{strd edgelabel/.style={font=\normalsize,inner sep=1.2pt}}%,strd normaltextvaligned}}

\newcommand*{\strdputllabel}[2]{% {text}{node}
    \strdscopeonlayer{strd labellayer}{
        \node[strd sidelabel,left] at (#2) {#1};
    }%
}

\newcommand*{\strdputrlabel}[2]{% {text}{node}
    \strdscopeonlayer{strd labellayer}{
        \node[strd sidelabel,right] at (#2) {#1};
    }%
}

\newcommand*{\strdputframelabel}[2]{% {text}{node}
    \strdscopeonlayer{strd labellayer}{
        \node[strd framelabel] at (#2) {#1};
    }%
}

\newcommand*{\strdputfamilylabel}[2]{% {text}{frame}
    \strdscopeonlayer{strd labellayer}{
        \node[strd familylabel,above right] at (#2 Right EndCorner) {#1};
    }%
}
\newcommand*{\strdputunfamilylabel}[2]{% {text}{frame}
    \strdscopeonlayer{strd labellayer}{
        \node[strd familylabel,above left] at (#2 Right EndCorner) {#1};
    }%
}

\newcommand*{\strdputregionlabel}[2]{% {text}{frame}
    \strdscopeonlayer{strd labellayer}{
        \node[strd familylabel,below left] at (#2 Right StartCorner) {#1};
    }%
}

\newcommand*{\strdputedgelabelat}[3]{% {pos}{text}{node}
    \strdscopeonlayer{strd labellayer}{
        \node[strd edgelabel,#1] at (#3) {#2};
    }%
}

\newcommand*{\strdputstartlabel}[2]{\strdputedgelabelat{above}{#1}{#2 Start}}
\newcommand*{\strdputendlabel}[2]{\strdputedgelabelat{below}{#1}{#2 End}}


% White strings
%

\tikzset{strd edgenoise/.style={shorten >= -0.2pt,shorten <= -0.2pt}}
\tikzset{strd white/.style={draw=white,line width=3pt,strd edgenoise}}

\newcommand*{\strdwhite}[3]{%
    \strdscopeonlayer{strd whitelayer}{
        \strdscope{strd white}{\strduse{#1}{#2}{#3}}
    }%
}


% Graded strings; order depends
%   You must wrap each string because of layers-reset-line-width bug.
%   BTW, tikz/double doesn't work with scopes.

\newcommand*{\strdgraded}[3]{%
    \strdscopeonlayer{strd gradedlayer}{
        \strdscope{strd white}{\strduse{#1}{#2}{#3 Graded}}
        \strdscope{strd edgenoise}{\strduse{#1}{#2}{#3}}
    }%
}

\newcommand*{\strdroadgraded}[3]{%
    \strdscope{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdscopeonlayer{strd gradedlayer}{
        \strdscope{strd roadpave}{\strduse{#1}{#2}{#3 Paved}}
    }%
}


% Roads
%   Keep scaling away by '--'.
%

\tikzset{strd roadcolor/.style={gray!18,text=black}}
\tikzset{strd roadbase/.style={line width=3.05pt}}
\tikzset{strd roadpave/.style={line width=2.65pt,strd edgenoise,strd roadcolor}}

\newcommand*{\strdnewroad}[3]{% {sc}{newid}{fromnode}
    \strdscope{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdscopeonlayer{strd pavelayer}{
        \strdscope{strd roadpave}{\strduse{#1}{#2 Paved}{#3}}
    }%
}
\newcommand*{\strdroad}[4]{% {stm}{sc}{newid}{fromnode}
    \strduse{#1}{\strdnewscope{strd roadbase}{#2}}{#3}{#4}
    \strduse{#1}{\strdonlayer{strd pavelayer}{\strdnewscope{strd roadpave}{#2}}}{#3 Paved}{#4}
}

% Crossable road; order depends
\newcommand*{\strdnewroadx}[3]{% {sc}{newid}{fromnode}
    \strdscope{strd roadbase}{\strduse{#1}{#2}{#3}}
    \strdscope{strd roadpave}{\strduse{#1}{#2 Paved}{#3}}%
}
\newcommand*{\strdroadx}[4]{% {stm}{sc}{newid}{fromnode}
    \strduse{#1}{\strdnewscope{strd roadbase}{#2}}{#3}{#4}
    \strduse{#1}{\strdnewscope{strd roadpave}{#2}}{#3 Paved}{#4}%
}

% Slightly noisy around anti-aliasing
\newcommand*{\strdputdeadend}[1]{% {node}
    \strdscopeonlayer{strd whitelayer}{
        \draw[strd draw,white,line width=4pt,shorten >=-1pt] {
            ($(#1 End)+(0,10.16pt)$) -- (#1 End)
        };
        \draw[strd draw,strd roadbase]{
            ($(#1 End)+(0,10.16pt)$) -- ($(#1 End)+(0,10.36pt)$)
        };
    }%
}

\newcommand*{\strdputroadlabel}[3]{% {ltext}{rtext}{node}
    \strdscopeonlayer{strd labellayer}{
        \node[strd sidelabel,left,xshift=-1.5pt] at (#3) {#1};
        \node[strd sidelabel,right,xshift=1.5pt] at (#3) {#2};
    }%
}

\newcommand*{\strdnewroadlaside}[2]{% {newid}{node}
    \node[strd coord] (#1 Start) at ($(#2)+(-0.05,0)$) {};
    \node[strd coord] (#1) at (#1 Start) {};
    \node[strd coord] (#1 End) at (#1 Start) {};%
}
\newcommand*{\strdroadlaside}{\strdnewcompose\strdnewroadlaside}

\newcommand*{\strdnewroadraside}{\strdnewflip\strdnewroadlaside}
\newcommand*{\strdroadraside}{\strdnewcompose\strdnewroadraside}


% Scoped transformations
%

\newcommand*{\strdscope}[2]{%
    \begin{scope}[#1]
        #2
    \end{scope}%
}

\newcommand*{\strdscopeflip}{\strdscope{xscale=-1}}
\newcommand*{\strdscopeinv}{\strdscope{yscale=-1}}
\newcommand*{\strdscopexscale}[1]{\strdscope{xscale=#1}}
\newcommand*{\strdscopeyscale}[1]{\strdscope{yscale=#1}}
\newcommand*{\strdscopescale}[2]{\strdscope{xscale=#1,yscale=#2}}
\newcommand*{\strdscopenone}{\strdscope{every path/.style=strd none,every node/.style=strd none}}
\newcommand*{\strdscopenolabels}{\strdscope{every node/.style=strd none}}
\newcommand*{\strdscopepathis}[1]{\strdscope{every path/.style=#1}}
\newcommand*{\strdscopenodeis}[1]{\strdscope{every node/.append style=#1}}
\newcommand*{\strdscopeimplicit}{\strdscopepathis{densely dotted}}

\newcommand*{\strdtosc}[4]{\strduse{#1}{\strduse{#2}{#3}{#4}}}
\newcommand*{\strdnewscope}{\Compose\strdtosc\strdscope}
\newcommand*{\strdnewflip}{\strdtosc\strdscopeflip}
\newcommand*{\strdnewinv}{\strdtosc\strdscopeinv}
\newcommand*{\strdnewnone}{\strdtosc\strdscopenone}
\newcommand*{\strdnewscale}[2]{\strdtosc{\strdscopescale{#1}{#2}}}
\newcommand*{\strdnewxscale}{\Compose\strdtosc\strdscopexscale}
\newcommand*{\strdnewyscale}{\Compose\strdtosc\strdscopeyscale}
\newcommand*{\strdnewxhalf}{\strdxnewscale{0.5}}
\newcommand*{\strdnewyhalf}{\strdynewscale{0.5}}
\newcommand*{\strdnewxdouble}{\strdnewxscale{2}}
\newcommand*{\strdnewydouble}{\strdnewyscale{2}}
\newcommand*{\strdnewimplicit}{\strdtosc\strdscopeimplicit}

\newcommand*{\strdtostm}[5]{\strduse{#1}{\strduse{#2}{#3}{#4}{#5}}}
\newcommand*{\strdxscale}[1]{\strdtostm{\strdscopexscale{#1}}}


% Sequence-style construction
%

\newcommand*{\strdseq}[1]{% {sa1,sa2,..,saN}
    \Foldr{\Flip\Compose}{\Identity}{\BraceListize{#1}}%
}
\newcommand*{\strdseqin}[2]{\strduse{#1}{\strdseq{#2}}}

\newcommand*{\strdgathered}[1]{% {sa1,sa2,..,saN}
    \strdin{gathered}{
        \strdseq{#1}{\strdnewempty}{theStrd}{\strdorigin}
    }%
}

% TODO
% \newcommand*{\strdassign}[4]{% {name}{stm}{newid}{fromnode}
%     \strduse{#2}{#3}{#4}
%     \strdnone{\strduse{#2}}{#3}{#1}% strdcopy keeps ranges only.
% }

\newcommand*{\strdwith}[4]{% {h}{sc}{newid}{fromnode}
    \strduse{#2}{#3}{#4}
    \strduse{#1}{#3}%
}
\newcommand*{\strdwithat}[5]{% {at}{h}{sc}{newid}{fromnode}
    \strduse{#3}{#4}{#5}
    \strduse{#2}{#4 #1}%
}
\newcommand*{\strdhere}{\strdwithat{End}}

\newcommand*{\strddot}{\strdhere\strdputdot}
\newcommand*{\strdwhitedot}{\strdwithat{Start}{\strdputwhitedot}}
\newcommand*{\strdcell}{\Compose\strdhere\strdputcell}
\newcommand*{\strdmapcell}{\Compose\strdhere\strdputmapcell}
\newcommand*{\strdbijcell}{\Compose\strdhere\strdputbijcell}
\newcommand*{\strdaroundframe}{\strdhere\strdputaroundframe}
\newcommand*{\strdroadaroundframe}{\strdhere\strdputroadaroundframe}
\newcommand*{\strddeadend}{\strdhere\strdputdeadend}
\newcommand*{\strdstart}{\Compose\strdhere\strdputstartlabel}
\newcommand*{\strdend}{\Compose\strdhere\strdputendlabel}

\newcommand*{\strdllabel}{\Compose\strdwith\strdputllabel}
\newcommand*{\strdrlabel}{\Compose\strdwith\strdputrlabel}
\newcommand*{\strdframelabel}{\Compose\strdwith\strdputframelabel}
\newcommand*{\strdregionlabel}{\Compose\strdwith\strdputregionlabel}
\newcommand*{\strdfamilylabel}{\Compose\strdwith\strdputfamilylabel}
\newcommand*{\strdunfamilylabel}{\Compose\strdwith\strdputunfamilylabel}

\newcommand*{\strdllabelat}[2]{\strdwithat{#1}{\strdputllabel{#2}}}
\newcommand*{\strdrlabelat}[2]{\strdwithat{#1}{\strdputrlabel{#2}}}
\newcommand*{\strdframelabelat}[2]{\strdwithat{#1}{\strdputframelabel{#2}}}
\newcommand*{\strdframellabel}{\strdframelabelat{Left}}
\newcommand*{\strdframerlabel}{\strdframelabelat{Right}}

\newcommand*{\strdroadlabel}[2]{\strdwith{\strdputroadlabel{#1}{#2}}}
\newcommand*{\strdroadlabelat}[3]{\strdwithat{#1}{\strdputroadlabel{#2}{#3}}}

\newcommand*{\strdbranchone}[4]{% {stm}{sc}{newid}{fromnode}
    \strduse{#1}{\strdnewnone{#2}}{#3 Branch}{#4}
    \strduse{#2}{#3}{#4}
}
\newcommand*{\strdbranch}{\strdseqin\strdbranchone}

\newcommand*{\strdrestart}[4]{% {stm}{sc}{newid}{fromnode}
    \strduse{#2}{#3}{#4}
    \strduse{#1}{\strdnewempty}{#3 Restart}{\strdorigin}%
}


% Utilities
%

\newcommand*{\strdrlap}{\Compose\mathrlap\smash}
\newcommand*{\strdllap}{\Compose\mathllap\smash}
\newcommand*{\strdlvert}[1]{\rotatebox[origin=c]{90}{\ensuremath{#1}}}
\newcommand*{\strdrvert}[1]{\rotatebox[origin=c]{-90}{\ensuremath{#1}}}
\newcommand*{\strdunraise}[1]{\mathstrut\raisebox{-\depth}{\ensuremath{#1}}}

